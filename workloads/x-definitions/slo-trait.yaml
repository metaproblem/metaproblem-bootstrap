# Code generated by KubeVela templates. DO NOT EDIT.
apiVersion: core.oam.dev/v1beta1
kind: TraitDefinition
metadata:
  name: slos
  namespace: vela-system
  annotations:
    definition.oam.dev/description: "Configures monitoring metrics for your service."
spec:
  appliesToWorkloads:
    - microservice
    - calendly-service
  definitionRef:
    name: slos.standard.oam.dev
  workloadRefPath: spec.workloadRef
  schematic:
    cue:
      template: |-
        outputs: PrometheusServiceLevel: {
          "apiVersion": "sloth.slok.dev/v1",
          "kind": "PrometheusServiceLevel",
          "metadata": {
              "labels": {
              	 for k, v in parameter.promLabels{
              	 	"\(k)": v
              	 }
              },
              "name": context.name
            },
          "spec": {
            "service": context.name,
            "labels": {
              "owner": parameter.owner,
              "team": parameter.team,
              "tier": "2"
            },
            "slos": [
              {
                "name": "requests-availability",
                "objective": parameter.objective ,
                "description": "Common SLO based on availability for HTTP request responses.",
                "sli": {
                  "events": {
                    "errorQuery": parameter.errorQuery
                    "totalQuery": parameter.totalQuery
                  }
                },
                "alerting": {
                  "name": "MyServiceHighErrorRate",
                  "labels": {
                    "category": "availability"
                  },
                  "annotations": {
                    "summary": "High error rate on 'myservice' requests responses"
                  },
                  "pageAlert": {
                    "labels": {
                      "severity": "pageteam",
                      "routing_key": "myteam"
                    }
                  },
                  "ticketAlert": {
                    "labels": {
                      "severity": "slack",
                      "slack_channel": "#alerts-myteam"
                    }
                  }
                }
              }
            ]
          }
        }


        parameter: {
            promLabels: [string]: string
            owner: string
            team: string
            errorQuery: string
            totalQuery: string
            objective: *99.9  | float



        }
